name: go-certdist CI

on:
  workflow_dispatch: {}
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Test
      run: go test -v ./...

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: amd64
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: go build -v -o build/certdist-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: certdist-${{ matrix.goos }}-${{ matrix.goarch }}
        path: build/certdist-${{ matrix.goos }}-${{ matrix.goarch }}* # Use wildcard for windows .exe

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Build
        run: go build -v -o build/certdist

      - name: Run integration test
        run: |
          chmod +x scripts/run-integration-test.sh
          chmod +x build/certdist
          scripts/run-integration-test.sh build/certdist

  create-container-images:
    needs: integration-test
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R

      - name: Prepare directory structure for TARGETPLATFORM
        run: |
          mkdir -p build/linux/amd64
          mkdir -p build/linux/arm64
          cp artifacts/certdist-linux-amd64/certdist-linux-amd64 build/linux/amd64/certdist
          cp artifacts/certdist-linux-arm64/certdist-linux-arm64 build/linux/arm64/certdist

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release and Upload Artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/certdist-linux-amd64/*
            artifacts/certdist-linux-arm64/*
            artifacts/certdist-windows-amd64/*
            artifacts/certdist-darwin-arm64/*
